name: Build & Publish Docker Images

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  workflow_dispatch:

env:
  REGISTRY: docker.io
  FRONTEND_IMAGE: docker.io/ayushdh96/mie_diarization-frontend
  BACKEND_IMAGE: docker.io/ayushdh96/mie_diarization-backend

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU (optional for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push FRONTEND (Vite 5173)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: frontend
          push: true
          # To support both Mac ARM & x86 pulls later:
          # platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.FRONTEND_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: build-and-push-frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU (optional for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push BACKEND (Flask 5001)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: backend
          push: true
          # platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.BACKEND_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max